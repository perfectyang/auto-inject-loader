"use strict";function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(t):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _iterableToArray(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}var t=require("@babel/types"),parser=require("@babel/parser"),generate=require("@babel/generator").default,traverse=require("@babel/traverse").default,getImportName=require("./getImportName"),_require=require("./utils"),isIncludes=_require.isIncludes;function generateDeclaration(r,e){var n=[];return e.forEach(function(r){"normal"===r.key?n.push(t.importSpecifier(t.identifier(r.name),t.identifier(r.name))):"default"===r.key&&n.unshift(t.importDefaultSpecifier(t.identifier(r.name)))}),t.importDeclaration(n,t.stringLiteral(r))}function transtJs(r,e){var t=e.autoImport,n=parser.parse(r,{sourceType:"module",plugins:["dynamicImport"]}),a=t.map(function(r){return r}).map(function(r){return{url:r.paths,names:getImportName(r)}}),i=a.map(function(r){return{url:r.url,names:[]}}),o={};if(traverse(n,{Identifier:function(r){var n=r.node.name;a.forEach(function(r,e){var t=isIncludes(r.names,function(r){return String(r.name)===String(n)});!t||n in o||(i[e].names.push(t),o[n]=n)})}}),(i=i.filter(function(r){return r.names.length})).length){var u,s=i.map(function(r){return generateDeclaration(r.url,r.names)});(u=n.program.body).unshift.apply(u,_toConsumableArray(s))}return generate(n).code}module.exports=transtJs;